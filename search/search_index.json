{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Siddhi Execution Reorder The siddhi-execution-reorder extension is a Siddhi extension that orders out-of-order event arrivals using algorithms such as K-Slack and alpha K-Stack. For information on Siddhi and it's features refer Siddhi Documentation . Download Versions 5.x and above with group id io.siddhi.extension.* from here . Versions 4.x and lower with group id org.wso2.extension.siddhi.* from here . Latest API Docs Latest API Docs is 5.0.3 . Features akslack ( Stream Processor ) Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . kslack ( Stream Processor ) Stream processor performs reordering of out-of-order events using K-Slack algorithm . Dependencies There are no other dependencies needed for this extension. Installation For installing this extension on various siddhi execution environments refer Siddhi documentation section on adding extensions . Support and Contribution We encourage users to ask questions and get support via StackOverflow , make sure to add the siddhi tag to the issue for better response. If you find any issues related to the extension please report them on the issue tracker . For production support and other contribution related information refer Siddhi Community documentation.","title":"Information"},{"location":"#siddhi-execution-reorder","text":"The siddhi-execution-reorder extension is a Siddhi extension that orders out-of-order event arrivals using algorithms such as K-Slack and alpha K-Stack. For information on Siddhi and it's features refer Siddhi Documentation .","title":"Siddhi Execution Reorder"},{"location":"#download","text":"Versions 5.x and above with group id io.siddhi.extension.* from here . Versions 4.x and lower with group id org.wso2.extension.siddhi.* from here .","title":"Download"},{"location":"#latest-api-docs","text":"Latest API Docs is 5.0.3 .","title":"Latest API Docs"},{"location":"#features","text":"akslack ( Stream Processor ) Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . kslack ( Stream Processor ) Stream processor performs reordering of out-of-order events using K-Slack algorithm .","title":"Features"},{"location":"#dependencies","text":"There are no other dependencies needed for this extension.","title":"Dependencies"},{"location":"#installation","text":"For installing this extension on various siddhi execution environments refer Siddhi documentation section on adding extensions .","title":"Installation"},{"location":"#support-and-contribution","text":"We encourage users to ask questions and get support via StackOverflow , make sure to add the siddhi tag to the issue for better response. If you find any issues related to the extension please report them on the issue tracker . For production support and other contribution related information refer Siddhi Community documentation.","title":"Support and Contribution"},{"location":"license/","text":"Copyright (c) 2019 WSO2 Inc. ( http://www.wso2.org ) All Rights Reserved. WSO2 Inc. licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ------------------------------------------------------------------------- Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS","title":"License"},{"location":"api/4.0.20/","text":"API Docs - v4.0.20 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.0.20"},{"location":"api/4.0.20/#api-docs-v4020","text":"","title":"API Docs - v4.0.20"},{"location":"api/4.0.20/#reorder","text":"","title":"Reorder"},{"location":"api/4.0.20/#akslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size","title":"akslack (Stream Processor)"},{"location":"api/4.0.20/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.0.21/","text":"API Docs - v4.0.21 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.0.21"},{"location":"api/4.0.21/#api-docs-v4021","text":"","title":"API Docs - v4.0.21"},{"location":"api/4.0.21/#reorder","text":"","title":"Reorder"},{"location":"api/4.0.21/#akslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size","title":"akslack (Stream Processor)"},{"location":"api/4.0.21/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.0.22/","text":"API Docs - v4.0.22 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.0.22"},{"location":"api/4.0.22/#api-docs-v4022","text":"","title":"API Docs - v4.0.22"},{"location":"api/4.0.22/#reorder","text":"","title":"Reorder"},{"location":"api/4.0.22/#akslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size","title":"akslack (Stream Processor)"},{"location":"api/4.0.22/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.0.23/","text":"API Docs - v4.0.23 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.0.23"},{"location":"api/4.0.23/#api-docs-v4023","text":"","title":"API Docs - v4.0.23"},{"location":"api/4.0.23/#reorder","text":"","title":"Reorder"},{"location":"api/4.0.23/#akslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size","title":"akslack (Stream Processor)"},{"location":"api/4.0.23/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.0.6/","text":"API Docs - v4.0.6 Kslack reorder (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax kslack:reorder(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000L) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. The timeout value is set to 1000 milliseconds Akslack reorder (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the Alpha K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax akslack:reorder(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20l) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. The batch size applied here is 20.","title":"4.0.6"},{"location":"api/4.0.6/#api-docs-v406","text":"","title":"API Docs - v4.0.6"},{"location":"api/4.0.6/#kslack","text":"","title":"Kslack"},{"location":"api/4.0.6/#reorder-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax kslack:reorder(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000L) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. The timeout value is set to 1000 milliseconds","title":"reorder (Stream Processor)"},{"location":"api/4.0.6/#akslack","text":"","title":"Akslack"},{"location":"api/4.0.6/#reorder-stream-processor_1","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the Alpha K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax akslack:reorder(<LONG> timestamp, <DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20l) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. The batch size applied here is 20.","title":"reorder (Stream Processor)"},{"location":"api/4.1.0/","text":"API Docs - v4.1.0 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals INT FLOAT LONG DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.1.0"},{"location":"api/4.1.0/#api-docs-v410","text":"","title":"API Docs - v4.1.0"},{"location":"api/4.1.0/#reorder","text":"","title":"Reorder"},{"location":"api/4.1.0/#akslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the AQ-K-Slack based out-of-order handling algorithm (originally described in http://dl.acm.org/citation.cfm?doid=2675743.2771828) Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No correlation.field Corresponds to the data field of which the accuracy directly gets affected by the adaptive operation of the Alpha K-Slack extension. This field is used by the Alpha K-Slack to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals INT FLOAT LONG DOUBLE No No batch.size The parameter batch.size denotes the number of events that should be considered in the calculation of an alpha value. batch.size should be a value which should be greater than or equals to 15 10,000 LONG Yes No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the Alpha K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No error.threshold Error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with confidenceLevel 0.03 (3%) DOUBLE Yes No confidence.level Confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with errorThreshold 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 Timestamp based on which the reordering is performed LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value LONG beta3 Fixed time-out value (in milliseconds) assigned for flushing all the events buffered inside the extension. LONG beta4 Maximum threshold value assigned for K parameter. LONG beta5 Flag set to indicate whether out-of-order events which arrive after buffer eviction to be discarded or not BOOL beta6 Error threshold value set for Alpha K-Slack algorithm DOUBLE beta7 Confidence level set for the Alpha K-Slack algorithm DOUBLE Examples EXAMPLE 1 define stream inputStream (eventtt long,data double); @info(name = 'query1') from inputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size","title":"akslack (Stream Processor)"},{"location":"api/4.1.0/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm (originally described in https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp Attribute used for ordering the events LONG No No timer.timeout Corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains all the events that are buffered within the reorder extension to outside. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for K parameter in the K-Slack algorithm 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag Indicates whether the out-of-order events which appear after the expiration of the K-slack window should get discarded or not. When this value is set to true, the events would get discarded false BOOL Yes No Examples EXAMPLE 1 define stream inputStream (eventtt long, price long, volume long); @info(name = 'query1') from inputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into outputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.1.1/","text":"API Docs - v4.1.1 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size. kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.1.1"},{"location":"api/4.1.1/#api-docs-v411","text":"","title":"API Docs - v4.1.1"},{"location":"api/4.1.1/#reorder","text":"","title":"Reorder"},{"location":"api/4.1.1/#akslack-stream-processor","text":"This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size.","title":"akslack (Stream Processor)"},{"location":"api/4.1.1/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.2.0/","text":"API Docs - v4.2.0 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size. kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.2.0"},{"location":"api/4.2.0/#api-docs-v420","text":"","title":"API Docs - v4.2.0"},{"location":"api/4.2.0/#reorder","text":"","title":"Reorder"},{"location":"api/4.2.0/#akslack-stream-processor","text":"This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size.","title":"akslack (Stream Processor)"},{"location":"api/4.2.0/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.2.1/","text":"API Docs - v4.2.1 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size. kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.2.1"},{"location":"api/4.2.1/#api-docs-v421","text":"","title":"API Docs - v4.2.1"},{"location":"api/4.2.1/#reorder","text":"","title":"Reorder"},{"location":"api/4.2.1/#akslack-stream-processor","text":"This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size.","title":"akslack (Stream Processor)"},{"location":"api/4.2.1/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/4.2.2/","text":"API Docs - v4.2.2 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size. kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"4.2.2"},{"location":"api/4.2.2/#api-docs-v422","text":"","title":"API Docs - v4.2.2"},{"location":"api/4.2.2/#reorder","text":"","title":"Reorder"},{"location":"api/4.2.2/#akslack-stream-processor","text":"This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size.","title":"akslack (Stream Processor)"},{"location":"api/4.2.2/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/5.0.0/","text":"API Docs - v5.0.0 Reorder akslack (Stream Processor) This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size. kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"5.0.0"},{"location":"api/5.0.0/#api-docs-v500","text":"","title":"API Docs - v5.0.0"},{"location":"api/5.0.0/#reorder","text":"","title":"Reorder"},{"location":"api/5.0.0/#akslack-stream-processor","text":"This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size.","title":"akslack (Stream Processor)"},{"location":"api/5.0.0/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/5.0.1/","text":"API Docs - v5.0.1 Tested Siddhi Core version: 5.0.0 It could also support other Siddhi Core minor versions. Reorder akslack (Stream Processor) This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size. kslack (Stream Processor) This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"5.0.1"},{"location":"api/5.0.1/#api-docs-v501","text":"Tested Siddhi Core version: 5.0.0 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.1"},{"location":"api/5.0.1/#reorder","text":"","title":"Reorder"},{"location":"api/5.0.1/#akslack-stream-processor","text":"This stream processor extension performs reordering of an event stream which is out of order. It implements the AQ-K-Slack based out-of-order handling algorithm which is originally described in 'http://dl.acm.org/citation.cfm?doid=2675743.2771828'. Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The attribute used for ordering the events. LONG No No correlation.field This corresponds to the data field of which the accuracy directly gets affected, by the adaptive operation of the Alpha K-Slack extension. This field is used to calculate the runtime window coverage threshold which is an upper limit set for the unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No No batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. It should be a value which should be greater than or equal to fifteen. 10,000 LONG Yes No timer.timeout This corresponds to a fixed time out value in milliseconds, which is set at the beginning of the process. Once the time out value expires, the extension drains out all the events that are buffered within the reorder extension. The time out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k This is the maximum threshold value for 'K' parameter in the Alpha K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the Alpha K-slack window should be discarded or not. When this value is set to 'true', the events are discarded. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'confidenceLevel'. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. This parameter must be defined simultaneously with 'errorThreshold'. 0.95 (95%) DOUBLE Yes No Extra Return Attributes Name Description Possible Types beta0 The timestamp based on which the reordering is performed. LONG beta1 An upper limit value assigned for the unsuccessfully handled late arrivals. DOUBLE beta2 The number of events that should be considered in the calculation of an alpha value. LONG beta3 The fixed time-out value in milliseconds assigned for flushing all the events buffered inside the extension. LONG beta4 The maximum threshold value assigned for 'K' parameter. LONG beta5 The flag set to indicate whether the out-of-order events which arrive after buffer eviction are to be discarded or not. BOOL beta6 The error threshold value set for Alpha K-Slack algorithm. DOUBLE beta7 The confidence level set for the Alpha K-Slack algorithm. DOUBLE Examples EXAMPLE 1 define stream InputStream (eventtt long,data double); @info(name = 'query1') from InputStream#reorder:akslack(eventtt, data, 20) select eventtt, data insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, 20 represents the batch size.","title":"akslack (Stream Processor)"},{"location":"api/5.0.1/#kslack-stream-processor","text":"This stream processor extension performs reordering of an out-of-order event stream. It implements the K-Slack based out-of-order handling algorithm which is originally described in 'https://www2.informatik.uni-erlangen.de/publication/download/IPDPS2013.pdf'.) Syntax reorder:kslack(<LONG> timestamp, <LONG> timer.timeout, <LONG> max.k, <BOOL> discard.flag) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp This is the attribute used for ordering the events. LONG No No timer.timeout This corresponds to a fixed time-out value in milliseconds, which is set at the beginning of the process. Once the time-out value expires, the extension drains out all the events that are buffered within the reorder extension. The time-out has been implemented internally using a timer. The events buffered within the extension are released each time the timer ticks. -1 (timeout is infinite) LONG Yes No max.k The maximum threshold value for 'K' parameter in the K-Slack algorithm. 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.flag This indicates whether the out-of-order events which appear after the expiration of the K-slack window should be discarded or not. When this value is set to 'true', the events would get discarded. false BOOL Yes No Examples EXAMPLE 1 define stream InputStream (eventtt long, price long, volume long); @info(name = 'query1') from InputStream#reorder:kslack(eventtt, 1000) select eventtt, price, volume insert into OutputStream; This query performs reordering based on the 'eventtt' attribute values. In this example, the timeout value is set to 1000 milliseconds","title":"kslack (Stream Processor)"},{"location":"api/5.0.2/","text":"API Docs - v5.0.2 Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions. Reorder akslack (Stream Processor) Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes correlation.field By monitoring the changes in this field Alpha K-Slack dynamically optimises its behavior. This field is used to calculate the runtime window coverage threshold, which represents the upper limit set for unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No Yes batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. This should be greater than or equal to 15. 10,000 LONG Yes No timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:akslack(eventTime, volume, 20)#window.time(5 min) select eventTime, symbol, sum(volume) as total insert into OutputStream; The query reorders events based on the 'eventTime' attribute value and optimises for aggregating 'volume' attribute considering last 20 events. kslack (Stream Processor) Stream processor performs reordering of out-of-order events using K-Slack algorithm . Syntax reorder:kslack(<LONG> timestamp) reorder:kslack(<LONG> timestamp, <LONG> timeout) reorder:kslack(<LONG> timestamp, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k) reorder:kslack(<LONG> timestamp, <LONG> timeout, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:kslack(eventTime, 5000) select eventTime, symbol, volume insert into OutputStream; The query reorders events based on the 'eventTime' attribute value, and it forcefully flushes all the events who have arrived older than the given 'timeout' value ( 5000 milliseconds) every second.","title":"5.0.2"},{"location":"api/5.0.2/#api-docs-v502","text":"Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.2"},{"location":"api/5.0.2/#reorder","text":"","title":"Reorder"},{"location":"api/5.0.2/#akslack-stream-processor","text":"Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes correlation.field By monitoring the changes in this field Alpha K-Slack dynamically optimises its behavior. This field is used to calculate the runtime window coverage threshold, which represents the upper limit set for unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No Yes batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. This should be greater than or equal to 15. 10,000 LONG Yes No timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:akslack(eventTime, volume, 20)#window.time(5 min) select eventTime, symbol, sum(volume) as total insert into OutputStream; The query reorders events based on the 'eventTime' attribute value and optimises for aggregating 'volume' attribute considering last 20 events.","title":"akslack (Stream Processor)"},{"location":"api/5.0.2/#kslack-stream-processor","text":"Stream processor performs reordering of out-of-order events using K-Slack algorithm . Syntax reorder:kslack(<LONG> timestamp) reorder:kslack(<LONG> timestamp, <LONG> timeout) reorder:kslack(<LONG> timestamp, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k) reorder:kslack(<LONG> timestamp, <LONG> timeout, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:kslack(eventTime, 5000) select eventTime, symbol, volume insert into OutputStream; The query reorders events based on the 'eventTime' attribute value, and it forcefully flushes all the events who have arrived older than the given 'timeout' value ( 5000 milliseconds) every second.","title":"kslack (Stream Processor)"},{"location":"api/5.0.3/","text":"API Docs - v5.0.3 Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions. Reorder akslack (Stream Processor) Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes correlation.field By monitoring the changes in this field Alpha K-Slack dynamically optimises its behavior. This field is used to calculate the runtime window coverage threshold, which represents the upper limit set for unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No Yes batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. This should be greater than or equal to 15. 10,000 LONG Yes No timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:akslack(eventTime, volume, 20)#window.time(5 min) select eventTime, symbol, sum(volume) as total insert into OutputStream; The query reorders events based on the 'eventTime' attribute value and optimises for aggregating 'volume' attribute considering last 20 events. kslack (Stream Processor) Stream processor performs reordering of out-of-order events using K-Slack algorithm . Syntax reorder:kslack(<LONG> timestamp) reorder:kslack(<LONG> timestamp, <LONG> timeout) reorder:kslack(<LONG> timestamp, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k) reorder:kslack(<LONG> timestamp, <LONG> timeout, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:kslack(eventTime, 5000) select eventTime, symbol, volume insert into OutputStream; The query reorders events based on the 'eventTime' attribute value, and it forcefully flushes all the events who have arrived older than the given 'timeout' value ( 5000 milliseconds) every second.","title":"5.0.3"},{"location":"api/5.0.3/#api-docs-v503","text":"Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.3"},{"location":"api/5.0.3/#reorder","text":"","title":"Reorder"},{"location":"api/5.0.3/#akslack-stream-processor","text":"Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes correlation.field By monitoring the changes in this field Alpha K-Slack dynamically optimises its behavior. This field is used to calculate the runtime window coverage threshold, which represents the upper limit set for unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No Yes batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. This should be greater than or equal to 15. 10,000 LONG Yes No timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:akslack(eventTime, volume, 20)#window.time(5 min) select eventTime, symbol, sum(volume) as total insert into OutputStream; The query reorders events based on the 'eventTime' attribute value and optimises for aggregating 'volume' attribute considering last 20 events.","title":"akslack (Stream Processor)"},{"location":"api/5.0.3/#kslack-stream-processor","text":"Stream processor performs reordering of out-of-order events using K-Slack algorithm . Syntax reorder:kslack(<LONG> timestamp) reorder:kslack(<LONG> timestamp, <LONG> timeout) reorder:kslack(<LONG> timestamp, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k) reorder:kslack(<LONG> timestamp, <LONG> timeout, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:kslack(eventTime, 5000) select eventTime, symbol, volume insert into OutputStream; The query reorders events based on the 'eventTime' attribute value, and it forcefully flushes all the events who have arrived older than the given 'timeout' value ( 5000 milliseconds) every second.","title":"kslack (Stream Processor)"},{"location":"api/latest/","text":"API Docs - v5.0.3 Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions. Reorder akslack (Stream Processor) Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes correlation.field By monitoring the changes in this field Alpha K-Slack dynamically optimises its behavior. This field is used to calculate the runtime window coverage threshold, which represents the upper limit set for unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No Yes batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. This should be greater than or equal to 15. 10,000 LONG Yes No timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:akslack(eventTime, volume, 20)#window.time(5 min) select eventTime, symbol, sum(volume) as total insert into OutputStream; The query reorders events based on the 'eventTime' attribute value and optimises for aggregating 'volume' attribute considering last 20 events. kslack (Stream Processor) Stream processor performs reordering of out-of-order events using K-Slack algorithm . Syntax reorder:kslack(<LONG> timestamp) reorder:kslack(<LONG> timestamp, <LONG> timeout) reorder:kslack(<LONG> timestamp, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k) reorder:kslack(<LONG> timestamp, <LONG> timeout, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:kslack(eventTime, 5000) select eventTime, symbol, volume insert into OutputStream; The query reorders events based on the 'eventTime' attribute value, and it forcefully flushes all the events who have arrived older than the given 'timeout' value ( 5000 milliseconds) every second.","title":"latest"},{"location":"api/latest/#api-docs-v503","text":"Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.3"},{"location":"api/latest/#reorder","text":"","title":"Reorder"},{"location":"api/latest/#akslack-stream-processor","text":"Stream processor performs reordering of out-of-order events optimized for a givenparameter using AQ-K-Slack algorithm . This is best for reordering events on attributes those are used for aggregations.data . Syntax reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) reorder:akslack(<LONG> timestamp, <INT|FLOAT|LONG|DOUBLE> correlation.field, <LONG> batch.size, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival, <DOUBLE> error.threshold, <DOUBLE> confidence.level) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes correlation.field By monitoring the changes in this field Alpha K-Slack dynamically optimises its behavior. This field is used to calculate the runtime window coverage threshold, which represents the upper limit set for unsuccessfully handled late arrivals. INT FLOAT LONG DOUBLE No Yes batch.size The parameter 'batch.size' denotes the number of events that should be considered in the calculation of an alpha value. This should be greater than or equal to 15. 10,000 LONG Yes No timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No error.threshold The error threshold to be applied in Alpha K-Slack algorithm. 0.03 (3%) DOUBLE Yes No confidence.level The confidence level to be applied in Alpha K-Slack algorithm. 0.95 (95%) DOUBLE Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:akslack(eventTime, volume, 20)#window.time(5 min) select eventTime, symbol, sum(volume) as total insert into OutputStream; The query reorders events based on the 'eventTime' attribute value and optimises for aggregating 'volume' attribute considering last 20 events.","title":"akslack (Stream Processor)"},{"location":"api/latest/#kslack-stream-processor","text":"Stream processor performs reordering of out-of-order events using K-Slack algorithm . Syntax reorder:kslack(<LONG> timestamp) reorder:kslack(<LONG> timestamp, <LONG> timeout) reorder:kslack(<LONG> timestamp, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k) reorder:kslack(<LONG> timestamp, <LONG> timeout, <BOOL> discard.late.arrival) reorder:kslack(<LONG> timestamp, <LONG> timeout, <LONG> max.k, <BOOL> discard.late.arrival) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timestamp The event timestamp on which the events should be ordered. LONG No Yes timeout A timeout value in milliseconds, where the buffered events who are older than the given timeout period get flushed every second. -1 (timeout is infinite) LONG Yes No max.k The maximum K-Slack window threshold ('K' parameter). 9,223,372,036,854,775,807 (The maximum Long value) LONG Yes No discard.late.arrival If set to true the processor would discarded the out-of-order events arriving later than the K-Slack window, and in otherwise it allows the late arrivals to proceed. false BOOL Yes No Examples EXAMPLE 1 define stream StockStream (eventTime long, symbol string, volume long); @info(name = 'query1') from StockStream#reorder:kslack(eventTime, 5000) select eventTime, symbol, volume insert into OutputStream; The query reorders events based on the 'eventTime' attribute value, and it forcefully flushes all the events who have arrived older than the given 'timeout' value ( 5000 milliseconds) every second.","title":"kslack (Stream Processor)"}]}